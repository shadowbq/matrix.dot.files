# GENERAL OPTIONS

set -g default-terminal "tmux-256color" # this gets actually set in the bashrc

set -sg escape-time 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Display alert messages for 0.6 seconds
set-option -g display-time 600

# Don't rename windows automatically
set-option -g allow-rename off

# Allow mouse interaction
set -g mouse on
# Old TMUX pre-2.6
# set -g mouse-resize-pane on
# set -g mouse-select-pane on
# set -g mouse-select-window on

# CUSTOM BINDINGS

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

bind r source-file ~/.tmux.conf \; display "Config reloaded"

# Open new splits and window with the CWD
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind = setw synchronize-panes

bind-key y select-layout even-horizontal
bind-key u select-layout even-vertical
bind-key i select-layout main-horizontal
bind-key o select-layout main-vertical
bind-key p select-layout tiled

# Set repeat-time to one second
set-option -g repeat-time 1000

# Makes cycling between windows repeatable
unbind n
bind -r n next-window
unbind N
bind -r N previous-window

# Switch panes using alt+hjkl (no prefix needed)
# bind -n M-h select-pane -L
# bind -n M-l select-pane -R
# bind -n M-k select-pane -U
# bind -n M-j select-pane -D

# Vi-like movements between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of vim splits (from https://github.com/christoomey/vim-tmux-navigator)
# Commenting out as it conflicts with vital Readline functionality
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Status line

#set -g status-fg colour20
#set -g status-bg colour18
#set-window-option -g window-status-current-fg colour15
#set-option -gw window-status-activity-attr none
#set-option -gw window-status-activity-bg default
#set-option -gw window-status-activity-fg yellow

# Do not color split separators
#set -g pane-border-style fg=default
#set -g pane-active-border-style fg=default
#set -g pane-active-border-style bg=default

# Status bar
# set-option -g status-position top
#set -g status-left "#[fg=colour14][#S]  "
#set -g status-left-length 20
# set -g status-justify centre
#set-window-option -g window-status-format '#I:#W '
#set-window-option -g window-status-current-format '#I:#W '
#set -g status-right "#{prefix_highlight} Batt: #{battery_percentage} | %d/%m/%y %R"

#set -g visual-activity off
#set -g bell-action off
set -g visual-bell off
set -g bell-action current
#
#set-window-option -g monitor-activity on

#run-shell "powerline-daemon -q"
run-shell "/usr/local/bin/powerline-daemon -q"

# Read the ENV POWERLINE_REPO_ROOT 
source "$POWERLINE_REPO_ROOT/powerline/bindings/tmux/powerline.conf"


# PLUGINS

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-online-status'


# Prefix highlight color
set -g @prefix_highlight_fg 'grey'
set -g @prefix_highlight_bg 'default'

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

# Fix OS X clipboard and open command
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l bash"'

# CopyMode 
#bind-key -t vi-copy MouseDragEnd1Pane copy-pipe "xclip -selection clipboard -i"
#bind-key -t emacs-copy MouseDragEnd1Pane copy-pipe "xclip -selection clipboard -i"

bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -selection clipboard -i"
bind-key -T copy-mode-emacs MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -selection clipboard -i"
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -selection clipboard -i"

#set -g status-right "Online: #{online_status} | %a %h-%d %H:%M "
