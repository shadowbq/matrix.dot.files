###########################
# K8s / kubectl
# - MDF extension
###########################
# shellcheck shell=bash
#
###########################

if [[ -d "$HOME/.rd/bin" ]]; then
  # echo "Rancher Desktop found."
  export PATH=$PATH:"$HOME/.rd/bin"
fi

command -v kubectl >/dev/null 2>&1
if [ $? -eq 1 ]; then
  echo_warn "[matrix.dot.extension.k8s] kubectl not found, but k8s extension loaded."
fi

if [[ -d "${KREW_ROOT:-$HOME/.krew}/bin" ]]; then
  # echo "Krew found. kubectl krew, the plugin manager found."
  export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
fi

# kubectl version --client
# Client Version: v1.32.0
# Kustomize Version: v5.5.0

# Load dynamic Bash Completion for kubectl if bash_completion is enabled
if type -t _get_comp_words_by_ref &>/dev/null; then
  source <(kubectl completion bash)
fi

function powerline-kubernetes-toggle() {
  if [[ $RENDER_POWERLINE_KUBERNETES = "NO" ]]; then
    export RENDER_POWERLINE_KUBERNETES=YES
  else
    export RENDER_POWERLINE_KUBERNETES=NO
  fi
}


# official krew install script for bash
# krew.sigs.k8s.io
function install-krew() { 
  set -x; cd "$(mktemp -d)" &&
  OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
  ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
  KREW="krew-${OS}_${ARCH}" &&
  curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
  tar zxvf "${KREW}.tar.gz" &&
  ./"${KREW}" install krew
}
