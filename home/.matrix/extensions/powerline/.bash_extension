###########################
# Powerline status bar
# - MDF extension
###########################
# shellcheck shell=bash
#
###########################

## Debian / Ubuntu Install Help
## apt install fonts-powerline

function check_powerline_requirements {
  command -v socat >/dev/null 2>&1 || { echo_warn "[POWERLINE WARNING] No socat found."; }
  command -v pip >/dev/null 2>&1 || { echo_warn "[POWERLINE WARNING] No python pip found."; }
  command -v pipx >/dev/null 2>&1
  if [ $? -ne 0 ]; then
    check_pip_powerline
  else
    check_pipx_powerline
  fi
}

function check_pip_powerline {
  pip show psutil -q >/dev/null 2>&1 || { echo_warn "[POWERLINE WARNING] No python pip psutil Found."; }
  # check_pip_powerline_addon
  POWERLINE_REPO_ROOT=$(pip show powerline-status | ack "Location:(.*)" --output '$1')
  export POWERLINE_REPO_ROOT
}

function check_pipx_powerline {
    POWERLINE_REPO_ROOT=$(find "$HOME/.local" -path "*/pipx/venvs/powerline-status/lib/python3.*/site-packages" 2>/dev/null | sort -V | tail -1)
    
    if [ -n "$POWERLINE_REPO_ROOT" ]; then
        # echo "Found powerline at: $POWERLINE_REPO_ROOT"
        export POWERLINE_REPO_ROOT
    else
        echo "Warning: No powerline-status installation found in pipx venvs"
        unset POWERLINE_REPO_ROOT
    fi
}

function check_pip_powerline_addon {
  # https://github.com/d2iq-shadowbq/powerline-inject
  pip show powerline-inject -q >/dev/null 2>&1 || { echo_warn "[POWERLINE WARNING] No python pip powerline-inject Found."; }

  # https://github.com/zcmarine/powerkube
  pip show powerkube -q >/dev/null 2>&1 || { echo_warn "[POWERLINE WARNING] No python pip powerkube Found."; }

  pip show powerline-gitstatus -q >/dev/null 2>&1 || { echo_warn "[POWERLINE WARNING] No python pip powerline-gitstatus Found."; }
}

function check_powerline {
  if [[ -n $matrix_ext_powerline ]]; then
    command -v powerline-daemon >/dev/null 2>&1
    if [ $? -eq 0 ]; then
      check_powerline_requirements
      if [ -n "$POWERLINE_REPO_ROOT" ]; then
        powerline-daemon -q
        POWERLINE_BASH_CONTINUATION=1
        POWERLINE_BASH_SELECT=1
        . $POWERLINE_REPO_ROOT/powerline/bindings/bash/powerline.sh
      else
        { echo_err "[ERROR] Powerline daemon is found, but powerline path is not found."; }
      fi
    else
      { echo_err "[ERROR] Powerline is not found, but enabled."; }
    fi

  fi
}
