#!/usr/bin/env bash
# @author: shadowbq
# @description: Creates a header and foot TLP marking on each page of a PDF and saves it to a new file.
# @usage: ./tlp_mark_pdf.sh <pdf_from_file> <pdf_to_file> <tlp-color> <customer> 

function echo_err() {
  echo -ne "${RED}"
  cat <<<"$@" 1>&2
  echo -ne "${NORMAL}"
}

USAGE="Usage: $(basename "$0") <pdf_from_file> <pdf_to_file> <tlp-color> <customer>"
 
if [ $# -lt "3" ] 
then
    echo "$USAGE"
    exit 1 
fi

command -v gs >/dev/null 2>&1
if [ $? -eq 1 ]; then
  echo_err "[WARNING] GS (GhostScript) not found in path. "
  exit 1
fi

pdf_from_file=$1
pdf_to_file=$2
tlp=$3
customer=$4


if [ "$tlp" == "white" ]; then
    watermark="TLP:WHITE // ${customer} // PUBLIC"
    color="0.0 0.0 0.0"
elif [ "$tlp" == "green" ]; then
    watermark="TLP:GREEN // ${customer} // COMMUNITY ONLY"
    color="0.0 1.0 0.0"
elif [ "$tlp" == "amber" ]; then
    watermark="TLP:AMBER // ${customer} // LIMITED DISTRIBUTION"
    color="1.0 0.7 0.0"
elif [ "$tlp" == "ambers" ]; then
    watermark="TLP:AMBER+STRICT // ${customer} // DO NOT REDISTRIBUTE"
    color="1.0 0.7 0.0"
elif [ "$tlp" == "red" ]; then
    watermark="TLP:RED // ${customer} // RESTRICTED"
    color="1.0 0.0 0.0"
else
    echo "Invalid TLP color"
    exit 1
fi

! read -d '' pdf_mark <<EOF
<<
   /EndPage
   {
     2 eq { pop false }
     {
         gsave      
         /Helvetica findfont 
         12 scalefont 
         setfont
         newpath
         ${color} setrgbcolor 
         160 770 moveto
         (${watermark}) false  charpath
         1 setlinewidth fill
         160 10 moveto
         (${watermark}) false  charpath
         1 setlinewidth fill
         grestore
         true
     } ifelse
   } bind
>> setpagedevice
EOF

gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dALLOWPSTRANSPARENCY -dSAFER -dCompatibilityLevel="1.5" -dPDFSETTINGS="/printer" -sOutputFile="$pdf_to_file" -c "$pdf_mark" -f "$pdf_from_file"
